#*********************************************************************************
#   SECTION_1   ####
#*********************************************************************************
library(MASS)
head(crabs)
str(crabs)
morph <- crabs[,4:8]
library(class)
knn.pred <- knn(train = morph,
test = morph,
cl = crabs$sp,
k = 3)
knn.pred
confT <- table(knn.pred, crabs$sp)
confT
missCount <- sum(confT[row(confT)!=col(confT)])
trainErr <- missCount/nrow(crabs)
trainErr
read.csv('taxi.csv', stringsAsFactors=TRUE)
taxi <- read.csv('taxi.csv', stringsAsFactors = TRUE)
str(taxi)
set.seed(111)
s=1000
test.ind <- sample(1:nrow(taxi), size = s)
taxi.test <- taxi[test.ind,]
taxi.train <- taxi[-test.ind,]
# Apply KNN:
knn.pred.tr <- knn(train = taxi.train[,-7], # To training data (we have to remove
# the target variabel (column 7))
test = taxi.train[,-7],
cl = taxi.train$col,
k = 4)
knn.pred.te <- knn(train = taxi.train[,-7], # To test data
test = taxi.test[,-7],
cl = taxi.train$col,
k = 4)
# Confusion matrix (training data):
confT <- table(knn.pred.tr, taxi.train$col)
confT
missCount <- sum(confT[row(confT)!=col(confT)])
trainErr <- missCount/nrow(taxi.train)
trainErr
confT.te <- table(knn.pred.te, taxi.test$col)
confT.te
ks <- 1:30
train.err <- NA
test.err <- NA
taxi.tr.sc <- scale(taxi.train[,-7])
taxi.te.sc <- scale(taxi.test[,-7])
set.seed(262)
for (i in 1:length(ks)){
# Test error
knn.pred.te <- knn(train = taxi.tr.sc,
test = taxi.te.sc,
cl = taxi.train$col,
k = ks[i])
confT.te <- table(knn.pred.te, taxi.test$col)
missCount.te <- sum(confT.te[row(confT.te)!=col(confT.te)])
test.err[i] <- missCount.te/nrow(taxi.test)
# Training error
knn.pred.tr <- knn(train = taxi.tr.sc,
test = taxi.tr.sc,
cl = taxi.train$col,
k = ks[i])
confT.tr <- table(knn.pred.tr, taxi.train$col)
missCount.tr <- sum(confT.tr[row(confT.tr)!=col(confT.tr)])
train.err[i] <- missCount.tr/nrow(taxi.train)
#print(paste('done with k =', ks[i])) # to show which iteration is completed
}
# Put everything together:
knn.res <- data.frame(k=ks, train.err, test.err)
knn.res
plot(knn.res$k, knn.res$test.err, type = 'l',
ylim = c(0, 0.28), col='red', xlab='k', ylab='error rate')
lines(knn.res$train.err, col='blue', type='l')
legend('bottomright', legend = c('test error','train error'),
lty=c(1,1), col=c('red','blue'))
ks <- 1:30
train.err <- NA
test.err <- NA
taxi.tr.sc <- scale(taxi.train[,-7])
taxi.te.sc <- scale(taxi.test[,-7])
#set.seed(262)
for (i in 1:length(ks)){
# Test error
knn.pred.te <- knn(train = taxi.tr.sc,
test = taxi.te.sc,
cl = taxi.train$col,
k = ks[i])
confT.te <- table(knn.pred.te, taxi.test$col)
missCount.te <- sum(confT.te[row(confT.te)!=col(confT.te)])
test.err[i] <- missCount.te/nrow(taxi.test)
# Training error
knn.pred.tr <- knn(train = taxi.tr.sc,
test = taxi.tr.sc,
cl = taxi.train$col,
k = ks[i])
confT.tr <- table(knn.pred.tr, taxi.train$col)
missCount.tr <- sum(confT.tr[row(confT.tr)!=col(confT.tr)])
train.err[i] <- missCount.tr/nrow(taxi.train)
print(paste('done with k =', ks[i])) # to show which iteration is completed
}
# Put everything together:
knn.res <- data.frame(k=ks, train.err, test.err)
knn.res
plot(knn.res$k, knn.res$test.err, type = 'l',
ylim = c(0, 0.28), col='red', xlab='k', ylab='error rate')
lines(knn.res$train.err, col='blue', type='l')
legend('bottomright', legend = c('test error','train error'),
lty=c(1,1), col=c('red','blue'))
